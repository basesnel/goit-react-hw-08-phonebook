{"version":3,"file":"static/js/797.0d658652.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Popup/Popup.jsx","hooks/useLocalStorage.js","components/ContactEditor/ContactEditor.jsx","components/Phonebook/Phonebook.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filterStore.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normaliseFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normaliseFilter)\n    );\n  }\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { TextField } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <TextField\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      label=\"Contact Search\"\n      variant=\"outlined\"\n      onChange={changeFilter}\n      fullWidth\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import EditIcon from '@mui/icons-material/Edit';\nimport { styled } from '@mui/material/styles';\n\nconst ContactList = props => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  // const { setContactId, setOpenPopup } = props;\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const buttonHandleDeleteContact = (event, contactId) => {\n    handleDeleteContact(contactId);\n    event.target.disabled = true;\n    event.target.innerText = 'Deleting...';\n  };\n\n  // const handleEditContact = contactId => {\n  //   setContactId(contactId);\n\n  //   setOpenPopup(true);\n  // };\n\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.text.primary,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n\n  return (\n    <TableContainer component={Paper} sx={{ mx: 'auto', maxWidth: 960 }}>\n      <Table sx={{ minWidth: 650 }}>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"center\">Phone number</StyledTableCell>\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {visibleContacts.map(({ id, name, number }) => (\n            <TableRow\n              key={id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell align=\"left\">{name}</TableCell>\n              <TableCell align=\"center\">{number}</TableCell>\n              <TableCell align=\"right\">\n                {/* <Button\n                  variant=\"outlined\"\n                  onClick={() => handleEditContact(id)}\n                  sx={{ mr: 1 }}\n                >\n                  <EditIcon />\n                </Button> */}\n                <Button\n                  variant=\"outlined\"\n                  onClick={event => buttonHandleDeleteContact(event, id)}\n                  color=\"error\"\n                >\n                  <DeleteIcon />\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const LoaderBlock = styled.div`\n  position: absolute;\n  width: 100%;\n  z-index: 10;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { LoaderBlock } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderBlock>\n      <Oval\n        height={50}\n        width={50}\n        color=\"#4080f0\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#d0d0d0\"\n        strokeWidth={4}\n        strokeWidthSecondary={4}\n      />\n    </LoaderBlock>\n  );\n}\n","import Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function Popup(props) {\n  const { title, children, openPopup, setOpenPopup } = props;\n\n  return (\n    <Dialog open={openPopup} fullWidth>\n      <DialogTitle style={{ display: 'flex', alignItems: 'center' }}>\n        <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n          {title}\n        </Typography>\n        <IconButton\n          onClick={() => {\n            setOpenPopup(false);\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent sx={{ p: 2 }}>{children}</DialogContent>\n    </Dialog>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport ReactInputMask from 'react-input-mask';\n\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nimport { useSelector, useDispatch } from 'react-redux';\n// import { useEffect } from 'react';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Form, Field } from 'formik';\n\nconst scheme = yup.object().shape({\n  name: yup.string().required().min(3, 'Must be at least 3 characters'),\n  number: yup\n    .string()\n    .required()\n    .matches(\n      /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{2,3}\\)?)\\s?-?\\s?(\\(?\\d{2,4}\\)?)?$/,\n      'Not valid, please try: 000-000-0000'\n    ),\n});\n\nexport function ContactEditor(props) {\n  const { setOpenPopup } = props;\n\n  const contacts = useSelector(selectContacts);\n\n  // const searchedIndex = contacts.findIndex(contact => contact.id === contactId);\n  // console.log(contacts[searchedIndex]);\n\n  // const contact = contacts[searchedIndex];\n  // const ctName = contact.name;\n  // const ctNumber = contact.number;\n\n  const [name, setName] = useLocalStorage('name', '');\n  const [number, setNumber] = useLocalStorage('number', '');\n\n  // useEffect(() => {\n  //   if (contactId) {\n  //     setName(ctName);\n  //     setNumber(ctNumber);\n  //   }\n  // }, [contactId, ctName, ctNumber, setName, setNumber]);\n\n  const state = { name, number };\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  // const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = data => {\n    const { name, number } = data;\n\n    const contact = {\n      name,\n      number,\n    };\n\n    // if (contactId) {\n    //   console.log(contact);\n    //   dispatch(updateContact(contactId, contact));\n    // } else {\n    const contactName = contact.name.toLowerCase();\n    if (contacts.find(contact => contact.name.toLowerCase() === contactName)) {\n      alert(`${contact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(contact));\n    // }\n  };\n\n  const handleSubmit = event => {\n    formSubmitHandler(state);\n    reset();\n    setOpenPopup(false);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={state}\n      validationSchema={scheme}\n      onSubmit={handleSubmit}\n      isValid\n    >\n      {({ errors, isValid, touched, dirty }) => (\n        <Form>\n          <Stack spacing={1} sx={{ p: 2 }} useFlexGap>\n            <Field\n              type=\"text\"\n              name=\"name\"\n              as={TextField}\n              fullWidth\n              variant=\"outlined\"\n              color=\"primary\"\n              label=\"Name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              value={name}\n              onChange={handleChange}\n              id={nameInputId}\n              error={Boolean(errors.name) && Boolean(touched.name)}\n              helperText={Boolean(touched.name) && errors.name}\n            />\n\n            <ReactInputMask\n              mask=\"999-999-9999\"\n              value={number}\n              onChange={handleChange}\n            >\n              {() => (\n                <Field\n                  type=\"tel\"\n                  name=\"number\"\n                  as={TextField}\n                  fullWidth\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  label=\"Phone\"\n                  title=\"The phone must have phones and look like a template 000-000-0000.\"\n                  id={numberInputId}\n                  error={Boolean(errors.number) && Boolean(touched.number)}\n                  helperText={Boolean(touched.number) && errors.number}\n                />\n              )}\n            </ReactInputMask>\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              endIcon={<SendIcon />}\n              size=\"large\"\n              fullWidth\n              style={{\n                maxHeight: '56px',\n                minHeight: '56px',\n              }}\n              disabled={!isValid || dirty}\n            >\n              Send Contact\n            </Button>\n          </Stack>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport Loader from '../Loader/Loader';\n\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Paper from '@mui/material/Paper';\nimport { styled } from '@mui/system';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\nimport Popup from '../Popup/Popup';\nimport { ContactEditor } from '../ContactEditor/ContactEditor';\nimport { useState } from 'react';\n\nconst FormPaper = styled(Paper)`\n  margin: 0 auto;\n  width: 100%;\n  padding: 24px;\n`;\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [contactId, setContactId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Stack spacing={2} useFlexGap>\n        <FormPaper elevation={3}>\n          <Grid\n            container\n            justifyContent=\"space-around\"\n            alignItems=\"center\"\n            spacing={8}\n          >\n            <Grid item xs={8}>\n              <Filter />\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                endIcon={<PersonAddAlt1Icon />}\n                size=\"large\"\n                fullWidth\n                onClick={() => setOpenPopup(true)}\n                style={{\n                  maxHeight: '56px',\n                  minHeight: '56px',\n                }}\n              >\n                Add contact\n              </Button>\n            </Grid>\n          </Grid>\n        </FormPaper>\n        <FormPaper elevation={3}>\n          {isLoading && !error && <Loader />}\n          <ContactList\n            setContactId={setContactId}\n            setOpenPopup={setOpenPopup}\n          />\n        </FormPaper>\n      </Stack>\n      <Popup\n        title=\"Contact Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <ContactEditor\n          contactId={contactId}\n          setContactId={setContactId}\n          setOpenPopup={setOpenPopup}\n        />\n      </Popup>\n    </>\n  );\n}\n","import Phonebook from 'components/Phonebook/Phonebook';\n// import  ContactList from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport Box from '@mui/material/Box';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Phonebook />\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filterStore","filter","selectVisibleContacts","createSelector","normaliseFilter","toLowerCase","contact","name","includes","useSelector","dispatch","useDispatch","TextField","type","value","label","variant","onChange","event","setFilter","currentTarget","fullWidth","InputProps","startAdornment","InputAdornment","position","Search","props","visibleContacts","buttonHandleDeleteContact","contactId","deleteContact","handleDeleteContact","target","disabled","innerText","StyledTableCell","styled","TableCell","theme","tableCellClasses","backgroundColor","palette","text","primary","color","common","white","fontSize","TableContainer","component","Paper","sx","mx","maxWidth","Table","minWidth","TableHead","TableRow","align","TableBody","map","id","number","border","Button","onClick","Delete","LoaderBlock","Loader","height","width","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Popup","title","children","openPopup","setOpenPopup","Dialog","open","DialogTitle","style","display","alignItems","Typography","flexGrow","IconButton","Close","DialogContent","p","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","setState","useEffect","setItem","stringify","scheme","yup","shape","required","min","matches","ContactEditor","setName","setNumber","nameInputId","nanoid","numberInputId","handleChange","reset","enableReinitialize","initialValues","validationSchema","onSubmit","data","contactName","find","alert","addContact","formSubmitHandler","isValid","errors","touched","dirty","Stack","spacing","useFlexGap","as","Boolean","helperText","mask","endIcon","Send","size","maxHeight","minHeight","FormPaper","Phonebook","setContactId","fetchContacts","elevation","Grid","container","justifyContent","item","xs","PersonAddAlt1","Contacts","Box","Helmet"],"sourceRoot":""}