{"version":3,"file":"static/js/915.118122e9.chunk.js","mappings":"4TAQMA,GAAQC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,yCAILE,EAAqB,CACzBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,UAASP,GAArC,eAAOQ,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,CAAC,GAAtC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAW,WAA2B,IAA1BC,EAAyB,uDAAXL,EAC1BM,GAAI,UAAQJ,GAYhB,GAXI,SAAUG,IACZC,EAAKb,KAAOO,EAAOP,KAAO,GAAK,2BAC7B,UAAWY,IACbC,EAAKZ,MAAQ,cAAca,KAAKP,EAAON,OACnC,GACA,uBACF,aAAcW,IAChBC,EAAKX,SAAWK,EAAOL,SAAW,GAAK,2BAEzCQ,GAAU,UAAKG,IAEXD,IAAgBL,EAAQ,OAAOQ,OAAOR,OAAOM,GAAMG,OAAM,SAAAC,GAAC,MAAU,KAANA,CAAJ,GAC/D,EAEKC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBpB,EAAR,EAAQA,KAAMqB,EAAd,EAAcA,MACdb,GAAU,kBACLD,GADI,cAENP,EAAOqB,KAGVV,GAAS,UAAGX,EAAOqB,GACpB,EAkBD,OACE,iBAAMC,SAjBa,SAAAH,GACnBA,EAAEI,iBACF,IAAMC,EAAOL,EAAEM,cAEXd,MACFP,GACEsB,EAAAA,EAAAA,IAAS,CACP1B,KAAMwB,EAAKG,SAAS3B,KAAKqB,MACzBpB,MAAOuB,EAAKG,SAAS1B,MAAMoB,MAC3BnB,SAAUsB,EAAKG,SAASzB,SAASmB,SAGrCG,EAAKI,QAER,EAG+BC,aAAa,MAA3C,UACE,UAACC,EAAA,GAAD,CACEC,WAAS,EACTC,UAAU,SACVC,eAAe,eACfC,WAAW,SACXC,QAAS,EALX,WAOE,SAACL,EAAA,GAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAACzC,GAAD,QACE0C,QAAQ,WACRC,MAAM,WACNvC,KAAK,OACLwC,KAAK,OACLnB,MAAOd,EAAOP,KACdyC,SAAUvB,GACLT,EAAOT,MAAQ,CAAE0C,OAAO,EAAMC,WAAYlC,EAAOT,WAG1D,SAAC8B,EAAA,GAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAACzC,GAAD,QACE0C,QAAQ,WACRC,MAAM,QACNvC,KAAK,QACLqB,MAAOd,EAAON,MACdwC,SAAUvB,GACLT,EAAOR,OAAS,CAAEyC,OAAO,EAAMC,WAAYlC,EAAOR,YAG3D,SAAC6B,EAAA,GAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAACzC,GAAD,QACE0C,QAAQ,WACRC,MAAM,WACNvC,KAAK,WACLwC,KAAK,WACLnB,MAAOd,EAAOL,SACduC,SAAUvB,GACLT,EAAOP,UAAY,CACtBwC,OAAO,EACPC,WAAYlC,EAAOP,eAIzB,SAAC4B,EAAA,GAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAACO,EAAA,EAAD,CAAQN,QAAQ,YAAYE,KAAK,SAASK,GAAI,CAAEC,WAAY,KAA5D,4BAOT,E,oBChHKC,GAAgBlD,EAAAA,EAAAA,GAAOmD,EAAAA,EAAPnD,CAAH,8EAMJ,SAASoD,IACtB,OACE,UAACC,EAAA,EAAD,CAAKL,GAAI,CAAEM,EAAG,GAAd,WACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACL,EAAD,CAAeM,UAAW,EAA1B,UACE,SAAClD,EAAD,QAIP,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { register } from 'redux/auth/operations';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/system';\n\nconst Input = styled(TextField)`\n  width: 320px;\n`;\n\nconst initRegisterValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [values, setValues] = useState(initRegisterValues);\n  const [errors, setErrors] = useState({});\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if ('name' in fieldValues)\n      temp.name = values.name ? '' : 'This field is required.';\n    if ('email' in fieldValues)\n      temp.email = /$^|.+@.+..+/.test(values.email)\n        ? ''\n        : 'Email is not valid.';\n    if ('password' in fieldValues)\n      temp.password = values.password ? '' : 'This field is required.';\n\n    setErrors({ ...temp });\n\n    if (fieldValues === values) return Object.values(temp).every(x => x === '');\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    validate({ [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (validate()) {\n      dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      );\n      form.reset();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"space-around\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <Input\n            variant=\"outlined\"\n            label=\"username\"\n            name=\"name\"\n            type=\"text\"\n            value={values.name}\n            onChange={handleInputChange}\n            {...(errors.name && { error: true, helperText: errors.name })}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Input\n            variant=\"outlined\"\n            label=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleInputChange}\n            {...(errors.email && { error: true, helperText: errors.email })}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Input\n            variant=\"outlined\"\n            label=\"password\"\n            name=\"password\"\n            type=\"password\"\n            value={values.password}\n            onChange={handleInputChange}\n            {...(errors.password && {\n              error: true,\n              helperText: errors.password,\n            })}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant=\"contained\" type=\"submit\" sx={{ fontWeight: 700 }}>\n            Register\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport { styled } from '@mui/system';\n\nconst RegisterPaper = styled(Paper)`\n  width: 384px;\n  margin: 0 auto;\n  padding: 24px;\n`;\n\nexport default function Register() {\n  return (\n    <Box sx={{ p: 4 }}>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterPaper elevation={3}>\n        <RegisterForm />\n      </RegisterPaper>\n    </Box>\n  );\n}\n"],"names":["Input","styled","TextField","initRegisterValues","name","email","password","RegisterForm","dispatch","useDispatch","useState","values","setValues","errors","setErrors","validate","fieldValues","temp","test","Object","every","x","handleInputChange","e","target","value","onSubmit","preventDefault","form","currentTarget","register","elements","reset","autoComplete","Grid","container","direction","justifyContent","alignItems","spacing","item","xs","variant","label","type","onChange","error","helperText","Button","sx","fontWeight","RegisterPaper","Paper","Register","Box","p","Helmet","elevation"],"sourceRoot":""}