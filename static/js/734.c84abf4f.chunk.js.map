{"version":3,"file":"static/js/734.c84abf4f.chunk.js","mappings":"4TAQMA,GAAQC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,yCAILE,EAAkB,CACtBC,MAAO,GACPC,SAAU,IAGCC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,UAASN,GAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,CAAC,GAAtC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAW,WAA2B,IAA1BC,EAAyB,uDAAXL,EAC1BM,GAAI,UAAQJ,GAUhB,GATI,UAAWG,IACbC,EAAKZ,MAAQ,cAAca,KAAKP,EAAON,OACnC,GACA,uBACF,aAAcW,IAChBC,EAAKX,SAAWK,EAAOL,SAAW,GAAK,2BAEzCQ,GAAU,UAAKG,IAEXD,IAAgBL,EAAQ,OAAOQ,OAAOR,OAAOM,GAAMG,OAAM,SAAAC,GAAC,MAAU,KAANA,CAAJ,GAC/D,EAEKC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdd,GAAU,kBACLD,GADI,cAENc,EAAOC,KAGVX,GAAS,UAAGU,EAAOC,GACpB,EAiBD,OACE,iBAAMC,SAhBa,SAAAJ,GACnBA,EAAEK,iBACF,IAAMC,EAAON,EAAEO,cAEXf,MACFP,GACEuB,EAAAA,EAAAA,IAAM,CACJ1B,MAAOwB,EAAKG,SAAS3B,MAAMqB,MAC3BpB,SAAUuB,EAAKG,SAAS1B,SAASoB,SAGrCG,EAAKI,QAER,EAG+BC,aAAa,MAA3C,UACE,UAACC,EAAA,GAAD,CACEC,WAAS,EACTC,UAAU,SACVC,eAAe,eACfC,WAAW,SACXC,QAAS,EALX,WAOE,SAACL,EAAA,GAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAACzC,GAAD,QACE0C,QAAQ,WACRC,MAAM,QACNnB,KAAK,QACLC,MAAOf,EAAON,MACdwC,SAAUvB,GACLT,EAAOR,OAAS,CAAEyC,OAAO,EAAMC,WAAYlC,EAAOR,YAG3D,SAAC8B,EAAA,GAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAACzC,GAAD,QACE0C,QAAQ,WACRC,MAAM,WACNnB,KAAK,WACLuB,KAAK,WACLtB,MAAOf,EAAOL,SACduC,SAAUvB,GACLT,EAAOP,UAAY,CACtBwC,OAAO,EACPC,WAAYlC,EAAOP,eAIzB,SAAC6B,EAAA,GAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,SAACO,EAAA,EAAD,CAAQN,QAAQ,YAAYK,KAAK,SAASE,GAAI,CAAEC,WAAY,KAA5D,0BAOT,E,oBCjGKC,GAAalD,EAAAA,EAAAA,GAAOmD,EAAAA,EAAPnD,CAAH,8EAMD,SAASoD,IACtB,OACE,UAACC,EAAA,EAAD,CAAKL,GAAI,CAAEM,EAAG,GAAd,WACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACL,EAAD,CAAYM,UAAW,EAAvB,UACE,SAACnD,EAAD,QAIP,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\n\nconst Input = styled(TextField)`\n  width: 320px;\n`;\n\nconst initLoginValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const [values, setValues] = useState(initLoginValues);\n  const [errors, setErrors] = useState({});\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if ('email' in fieldValues)\n      temp.email = /$^|.+@.+..+/.test(values.email)\n        ? ''\n        : 'Email is not valid.';\n    if ('password' in fieldValues)\n      temp.password = values.password ? '' : 'This field is required.';\n\n    setErrors({ ...temp });\n\n    if (fieldValues === values) return Object.values(temp).every(x => x === '');\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    validate({ [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (validate()) {\n      dispatch(\n        login({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      );\n      form.reset();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"space-around\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <Input\n            variant=\"outlined\"\n            label=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleInputChange}\n            {...(errors.email && { error: true, helperText: errors.email })}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Input\n            variant=\"outlined\"\n            label=\"password\"\n            name=\"password\"\n            type=\"password\"\n            value={values.password}\n            onChange={handleInputChange}\n            {...(errors.password && {\n              error: true,\n              helperText: errors.password,\n            })}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant=\"contained\" type=\"submit\" sx={{ fontWeight: 700 }}>\n            Log in\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport { styled } from '@mui/system';\n\nconst LoginPaper = styled(Paper)`\n  width: 384px;\n  margin: 0 auto;\n  padding: 24px;\n`;\n\nexport default function Login() {\n  return (\n    <Box sx={{ p: 4 }}>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginPaper elevation={3}>\n        <LoginForm />\n      </LoginPaper>\n    </Box>\n  );\n}\n"],"names":["Input","styled","TextField","initLoginValues","email","password","LoginForm","dispatch","useDispatch","useState","values","setValues","errors","setErrors","validate","fieldValues","temp","test","Object","every","x","handleInputChange","e","target","name","value","onSubmit","preventDefault","form","currentTarget","login","elements","reset","autoComplete","Grid","container","direction","justifyContent","alignItems","spacing","item","xs","variant","label","onChange","error","helperText","type","Button","sx","fontWeight","LoginPaper","Paper","Login","Box","p","Helmet","elevation"],"sourceRoot":""}